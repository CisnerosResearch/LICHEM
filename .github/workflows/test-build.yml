name: Test LICHEM
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${ { matrix.config.name } }
    runs-on: ${ { matrix.config.os } }
    strategy:
      fail-fast: false
      matrix:
        config:
        # Might need to specify clang-3.8, clang++-3.8, gcc-5, g++-5
        - {
            name: "Ubuntu Latest GCC", artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Latest Clang", artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            build_type: "Release", cc: "clang", cxx: "clang++"
          }
        - {
            name: "macOS Latest Clang", artifact: "macOS.tar.xz",
            os: macos-latest,
            build_type: "Release", cc: "clang", cxx: "clang++"
          }

    steps:
    - uses: actions/checkout@v2

    - name: Fix install script and run
      shell: bash
      run: |
        set(ENV{CC} ${{ matrix.config.cc }})
        set(ENV{CXX} ${{ matrix.config.cxx }})

        if [ ${{ runner.os }} == ubuntu ]; then if [ ${CXX} == clang++ ]; then sed -i 's/CXX= /CXX=clan/g' Makefile; fi; fi

        if [ ${{ runner.os }} == ubuntu ]; then if [ ${CC} == clang ]; then sed -i 's/CC=/CC=clan/g' Makefile; fi; fi

        if [ ${{ runner.os }} == ubuntu ]; then if [ ${CC} == clang ] || [ ${CXX} == clang++ ]; then sed -i 's/-fopenmp/-I\/usr\/include -fopenmp/g' Makefile; fi; fi

        if [ ${{ runner.os }} == osx ]; then if [ ${CXX} == clang++ ]; then sed -i "" 's/CXX= /CXX=clan/g' Makefile; fi; fi

        if [ ${{ runner.os }} == osx ]; then if [ ${CC} == clang ]; then sed -i "" 's/CC=/CC=clan/g' Makefile; fi; fi

        if [ ${{ runner.os }} == osx ]; then sed -i "" 's/-static//g' Makefile; fi

        if [ ${{ runner.os }} == osx ]; then sed -i "" 's/-fopenmp//g' Makefile; fi

        if [ ${{ runner.os }} == osx ]; then sed -i "" 's/SEDI=-i/SEDI=-i \"\"/g' Makefile; fi

        if [ ${{ runner.os }} == ubuntu ]; then sudo ldconfig; fi

        make install && make clean

        if [ ${{ runner.os }} == ubuntu ]; then apt-get moo; fi

name: Build LaTeX document
on: [push]
jobs:
  build_latex:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Compile LaTeX document
        uses: xu-cheng/latex-action@v2
        with: src/
          root_file: manual.tex
        post_compile: "latexmk -c"
